<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ora.dao.UserDao">
    <!-- 员工注册 -->
    <insert id="addUser" parameterType="user">
        INSERT INTO user (
         number,
         loginname,
         password,
         uname,
         usex,
         ubirthday,
         utel,
         uwechat,
         idcode,
         createDate,
         encrypted_id,
         encrypted_result)
         VALUES(
         #{number},
         #{loginname},
         #{password},
         #{uname},
         #{usex},
         #{ubirthday},
         #{utel},
         #{uwechat},
         #{idcode},
         #{createDate},
         #{encrypted_id},
         #{encrypted_result})
    </insert>
    <!-- 员工登录 -->
    <select id="findUser" parameterType="String" resultType="user">
             SELECT * FROM user WHERE loginname = #{loginname} AND password = #{password}
    </select>
    <!-- 验证密保问题 -->
    <select id="selectEncrypted" parameterType="String" resultType="user">
        SELECT * FROM user WHERE loginname = #{loginname} AND encrypted_id = #{encrypted_id} AND encrypted_result=#{encrypted_result}
    </select>
    <!-- 设置密码 -->
    <update id="setPassword">
        UPDATE user set password = #{password} WHERE uid=#{id}
    </update>
    <!-- 根据上级领导名字查询所有员工 -->
    <select id="selectAllUserBySupperior" parameterType="String" resultType="user">
        SELECT * from user WHERE supperior = #{uname} order by number asc
    </select>
    <!-- 根据uid查询个人资料 -->
    <select id="findUserByUid" parameterType="Integer" resultType="user">
        SELECT * FROM user WHERE uid = #{uid}
    </select>
    <!-- 根据uid修改导师个人信息 -->
    <update id="updateUserByUid" parameterType="user">
        UPDATE user
           <set>
               <if test="number != null and number != ''">
                   number = #{number},
               </if>
               <if test="uname != null and uname != ''">
                   uname = #{uname},
               </if>
               <if test="usex != null and usex != ''">
                   usex = #{usex},
               </if>
               <if test="ubirthday != null and ubirthday != ''">
                   ubirthday = #{ubirthday},
               </if>
               <if test="utel != null and utel != ''">
                   utel = #{utel},
               </if>
               <if test="uwechat != null and uwechat != ''">
                   uwechat = #{uwechat},
               </if>
               <if test="idcode != null and idcode != ''">
                   idcode = #{idcode},
               </if>
                   complaint = #{complaint},
               <if test="position != null and position != ''">
                   position = #{position},
               </if>
               <if test="supperior != null and supperior != ''">
                   supperior = #{supperior},
               </if>
               <if test="remark != null and remark != ''">
                   remark = #{remark},
               </if>
               <if test="entryTime != null and entryTime != ''">
                   entryTime = #{entryTime},
               </if>
               <if test="encrypted_id != null and encrypted_id != ''">
                   encrypted_id = #{encrypted_id},
               </if>
               <if test="encrypted_result != null and encrypted_result != ''">
                   encrypted_result = #{encrypted_result},
               </if>
               <if test="birthplace != null and birthplace != ''">
                   birthplace = #{birthplace},
               </if>
               <if test="certificate != null and certificate != ''">
                   certificate = #{certificate},
               </if>
               <if test="department_id != null and department_id != ''">
                   department_id = #{department_id}
               </if>
           </set>
           WHERE uid = #{uid}
    </update>
    <!-- 查询当前登录用户的权限-->
    <select id="findUserPermission" parameterType="Integer" resultType="permission">
        SELECT * from permission WHERE user_id = #{user_id}
    </select>
    <!-- 修改计划金额 -->
    <update id="updatePlan" parameterType="user">
        UPDATE user SET plan = #{plan} WHERE uid = #{uid}
    </update>
    <!-- 查询所有员工 -->
    <select id="selectAllUser" resultType="user">
        SELECT * FROM user order by number asc
    </select>
    <!-- 查询所有员工业绩，超级管理员除外 -->
    <select id="selectAllPerformance" resultType="user">
        select * FROM user WHERE position &lt; 4 order by number asc
    </select>
    <!-- 查询当前登录人其下的所有员工业绩 -->
    <select id="selectUserByUser" parameterType="user" resultType="user">
        select * from user
        <where>
            AND position &lt; #{position}
            <if test="uname != null and uname != ''">
                and supperior = #{uname}
            </if>
        </where>
        order by number asc
    </select>
    <!-- 根据姓名模糊查询员工业绩 -->
    <select id="selectUserByUname" parameterType="String" resultType="user">
        SELECT * from user WHERE uname LIKE concat('%',#{uname},'%') order by number asc
     </select>
    <!-- 查询主管和部门 -->
    <select id="selectSupervisor" parameterType="Integer" resultType="user">
        SELECT * FROM user WHERE department_id = #{department_id} AND position = 2
    </select>
    <!-- 查询员工和部门 -->
    <select id="selectUserDepart" parameterType="Integer" resultType="user">
        SELECT * FROM user WHERE department_id = #{department_id} AND position != 2 order by number asc
    </select>
    <!-- 删除员工 -->
    <delete id="deleteUser" parameterType="Integer">
        DELETE FROM user WHERE uid = #{uid}
    </delete>
    <!-- 验证用户姓名是否已存在 -->
    <select id="selectUnameByUname" parameterType="String" resultType="String">
        SELECT uname from user WHERE uname = #{uname}
    </select>
    <!-- 验证用户名是否已存在 -->
    <select id="selectLoginName" parameterType="String" resultType="String">
        SELECT uname from user WHERE loginname = #{loginname}
    </select>
    <!-- 备份数据 -->
    <insert id="insertHistory" parameterType="user">
        INSERT into history(uid,uname,uposition,udepartment,uplan,ureality,urate,updatecusts,hdate)
        VALUES (#{uid},#{uname},#{position},#{department_id},#{plan},#{reality},#{rate},#{updatecusts},#{date});
    </insert>
    <!-- 清空业绩 -->
    <update id="updateUserPerformance" parameterType="user">
        update user set plan = 0,updatecusts = 0,reality = 0 WHERE uid = #{uid}
    </update>
    <!-- 根据职级查询超级管理员的姓名 -->
    <select id="findSuperUname" resultType="String">
      SELECT uname FROM user where position = 4
    </select>
    <!-- 根据传进来的参数修改下级的直属上级姓名 -->
    <update id="updateSupperior" parameterType="user">
        UPDATE user SET supperior=#{supperior} where supperior = #{uname}
    </update>
    <update id="updateCustomerUname" parameterType="user">
        UPDATE customer SET uname=#{supperior} where uname = #{uname}
    </update>
    <update id="updatePermissionUname" parameterType="user">
        UPDATE permission SET user_uname = #{supperior} where user_uname = #{uname}
    </update>

</mapper>
